# .github/workflows/release.yml

name: Build and Release ARM64 Wireproxy Image

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  build-and-release-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and Push ARM64 image to GHCR
        uses: docker/build-push-action@v6
        with:
          context: ./wireproxy
          file: ./wireproxy/Dockerfile
          platforms: linux/arm64 # <-- Only building for ARM64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and Export ARM64 Tarball for Release
        uses: docker/build-push-action@v6
        with:
          context: ./wireproxy
          file: ./wireproxy/Dockerfile
          platforms: linux/arm64 # <-- Only building for ARM64
          push: false
          # Save the output to a uniquely named tar file
          outputs: type=docker,dest=./wireproxy-arm64-${{ github.ref_name }}.tar
          cache-from: type=gha

      - name: Upload ARM64 Tarball to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # Only upload the ARM64 tarball
          files: ./wireproxy-arm64-${{ github.ref_name }}.tar
