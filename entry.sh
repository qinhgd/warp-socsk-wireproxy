#!/bin/sh
set -e

# ==============================================================================
# 脚本配置 (可通过 Docker 环境变量 -e KEY=VALUE 覆盖)
# ==============================================================================
# --- 文件路径 ---
BEST_IP_FILE="/wgcf/best_ips.txt"
WGCF_PROFILE="/wgcf/wgcf-profile.conf"
WGCF_ACCOUNT="/wgcf/wgcf-account.toml"
WIREPROXY_CONFIG="/wgcf/wireproxy.conf"

# --- IP 优选配置 ---
OPTIMIZE_INTERVAL="${OPTIMIZE_INTERVAL:-21600}" # 定时优选周期 (秒), 默认6小时
WARP_CONNECT_TIMEOUT="${WARP_CONNECT_TIMEOUT:-5}" # 优选时测试每个IP的连接超时
BEST_IP_COUNT="${BEST_IP_COUNT:-20}" # 保留的最佳IP数量

# --- 代理服务配置 ---
SOCKS_PORT="${SOCKS_PORT:-1081}"
HTTP_PORT="${HTTP_PORT:-8081}"
BIND_ADDRESS="${BIND_ADDRESS:-0.0.0.0}"

# ==============================================================================
# 工具函数
# ==============================================================================
log() { echo "$(date '+%Y-%m-%d %H:%M:%S') | $1"; }
red() { log "\033[31m\031m$1\033[0m"; }
green() { log "\033[32m\031m$1\033[0m"; }
yellow() { log "\033[33m\031m$1\033[0m"; }

# ==============================================================================
# IP优选与配置生成
# ==============================================================================
run_ip_selection() {
    green "🚀 开始优选 WARP Endpoint IP..."
    cd /tmp
    /usr/local/bin/warp -t "$WARP_CONNECT_TIMEOUT" >/dev/null
    if [ -f "result.csv" ]; then
        green "✅ 优选完成，正在处理结果..."
        awk -F, '($2+0) > 0 && ($2+0) < 9999 {print $1}' result.csv | head -n "$BEST_IP_COUNT" > "$BEST_IP_FILE"
        if [ -s "$BEST_IP_FILE" ]; then
            green "✅ 已生成包含 $(wc -l < "$BEST_IP_FILE") 个IP的优选列表。"
        else
            red "⚠️ 未能筛选出合适的IP，将使用默认地址。"
            echo "engage.cloudflareclient.com:2408" > "$BEST_IP_FILE"
        fi
        rm -f result.csv
    else
        red "⚠️ warp-script未能生成优选结果，将使用默认地址。"
        echo "engage.cloudflareclient.com:2408" > "$BEST_IP_FILE"
    fi
    cd /wgcf
}

generate_wireproxy_config() {
    if [ ! -s "$BEST_IP_FILE" ]; then
        red "❌ 优选IP列表为空！将执行一次紧急IP优选..."
        run_ip_selection
    fi
    local random_ip=$(shuf -n 1 "$BEST_IP_FILE")
    green "🔄 已从优选列表随机选择新 Endpoint: $random_ip"

    local private_key=$(grep 'PrivateKey' "$WGCF_PROFILE" | awk '{print $3}')
    local public_key=$(grep 'PublicKey' "$WGCF_PROFILE" | awk '{print $3}')
    local address_v4=$(grep 'Address' "$WGCF_PROFILE" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+/[0-9]+' | head -1)
    local address_v6=$(grep 'Address' "$WGCF_PROFILE" | grep -oE '[0-9a-fA-F:]+/[0-9]+' | head -1)

    cat > "$WIREPROXY_CONFIG" <<-EOF
# Auto-generated by entry.sh on $(date)
[Interface]
PrivateKey = $private_key
Address = $address_v4
Address = $address_v6
DNS = 1.1.1.1
MTU = 1280

[Peer]
PublicKey = $public_key
Endpoint = $random_ip
AllowedIPs = 0.0.0.0/0
AllowedIPs = ::/0

[Socks5]
BindAddress = ${BIND_ADDRESS}:${SOCKS_PORT}
EOF

    if [ -n "$HTTP_PORT" ]; then
        cat >> "$WIREPROXY_CONFIG" <<-EOF

[HTTP]
BindAddress = ${BIND_ADDRESS}:${HTTP_PORT}
EOF
    fi
    green "✅ Wireproxy 配置文件 (${WIREPROXY_CONFIG}) 已生成。"
}

# ==============================================================================
# 主运行函数
# ==============================================================================
main() {
    yellow "服务初始化..."
    if [ ! -f "$WGCF_PROFILE" ]; then
        yellow "未找到 WARP 配置文件，将执行首次注册..."
        yes | wgcf register --accept-tos
        wgcf generate
        green "✅ WARP 配置文件已生成。"
    fi

    if [ ! -f "$BEST_IP_FILE" ]; then
        run_ip_selection
    fi

    if [ "$OPTIMIZE_INTERVAL" -gt 0 ]; then
        (
            while true; do
                sleep "$OPTIMIZE_INTERVAL"
                yellow "🔄 [定时任务] 开始更新IP列表..."
                pkill -f wireproxy && green "✅ 已发送重连信号以应用新IP。" || yellow "wireproxy 不在运行中。"
            done
        ) &
        green "🕰️ 已启动定时IP优选任务，每 ${OPTIMIZE_INTERVAL} 秒执行一次。"
    fi

    while true; do
        generate_wireproxy_config
        yellow "🚀 正在启动 Wireproxy 服务..."
        (exec /usr/local/bin/wireproxy -c "$WIREPROXY_CONFIG" -u)
        red "‼️ Wireproxy 进程已退出。将在 5 秒后尝试使用新的优选IP重启..."
        sleep 5
    done
}

# ==============================================================================
# 脚本入口
# ==============================================================================
main
